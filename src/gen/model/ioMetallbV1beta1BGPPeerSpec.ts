/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IoMetallbV1beta1BGPPeerSpecNodeSelectorsInner } from './ioMetallbV1beta1BGPPeerSpecNodeSelectorsInner';

/**
* BGPPeerSpec defines the desired state of Peer.
*/
export class IoMetallbV1beta1BGPPeerSpec {
    'bfdProfile'?: string;
    /**
    * EBGP peer is multi-hops away
    */
    'ebgpMultiHop'?: boolean;
    /**
    * Requested BGP hold time, per RFC4271.
    */
    'holdTime'?: string;
    /**
    * Requested BGP keepalive time, per RFC4271.
    */
    'keepaliveTime'?: string;
    /**
    * AS number to use for the local end of the session.
    */
    'myASN': number;
    /**
    * Only connect to this peer on nodes that match one of these selectors.
    */
    'nodeSelectors'?: Array<IoMetallbV1beta1BGPPeerSpecNodeSelectorsInner>;
    /**
    * Authentication password for routers enforcing TCP MD5 authenticated sessions
    */
    'password'?: string;
    /**
    * AS number to expect from the remote end of the session.
    */
    'peerASN': number;
    /**
    * Address to dial when establishing the session.
    */
    'peerAddress': string;
    /**
    * Port to dial when establishing the session.
    */
    'peerPort'?: number;
    /**
    * BGP router ID to advertise to the peer
    */
    'routerID'?: string;
    /**
    * Source address to use when establishing the session.
    */
    'sourceAddress'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "bfdProfile",
            "baseName": "bfdProfile",
            "type": "string"
        },
        {
            "name": "ebgpMultiHop",
            "baseName": "ebgpMultiHop",
            "type": "boolean"
        },
        {
            "name": "holdTime",
            "baseName": "holdTime",
            "type": "string"
        },
        {
            "name": "keepaliveTime",
            "baseName": "keepaliveTime",
            "type": "string"
        },
        {
            "name": "myASN",
            "baseName": "myASN",
            "type": "number"
        },
        {
            "name": "nodeSelectors",
            "baseName": "nodeSelectors",
            "type": "Array<IoMetallbV1beta1BGPPeerSpecNodeSelectorsInner>"
        },
        {
            "name": "password",
            "baseName": "password",
            "type": "string"
        },
        {
            "name": "peerASN",
            "baseName": "peerASN",
            "type": "number"
        },
        {
            "name": "peerAddress",
            "baseName": "peerAddress",
            "type": "string"
        },
        {
            "name": "peerPort",
            "baseName": "peerPort",
            "type": "number"
        },
        {
            "name": "routerID",
            "baseName": "routerID",
            "type": "string"
        },
        {
            "name": "sourceAddress",
            "baseName": "sourceAddress",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return IoMetallbV1beta1BGPPeerSpec.attributeTypeMap;
    }
}


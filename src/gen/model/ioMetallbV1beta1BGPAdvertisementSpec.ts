/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IoMetallbV1beta1BGPAdvertisementSpecIpAddressPoolSelectorsInner } from './ioMetallbV1beta1BGPAdvertisementSpecIpAddressPoolSelectorsInner';

/**
* BGPAdvertisementSpec defines the desired state of BGPAdvertisement.
*/
export class IoMetallbV1beta1BGPAdvertisementSpec {
    /**
    * The aggregation-length advertisement option lets you “roll up” the /32s into a larger prefix. Defaults to 32. Works for IPv4 addresses.
    */
    'aggregationLength'?: number;
    /**
    * The aggregation-length advertisement option lets you “roll up” the /128s into a larger prefix. Defaults to 128. Works for IPv6 addresses.
    */
    'aggregationLengthV6'?: number;
    /**
    * The BGP communities to be associated with the announcement. Each item can be a standard community of the form 1234:1234, a large community of the form large:1234:1234:1234 or the name of an alias defined in the Community CRD.
    */
    'communities'?: Array<string>;
    /**
    * A selector for the IPAddressPools which would get advertised via this advertisement. If no IPAddressPool is selected by this or by the list, the advertisement is applied to all the IPAddressPools.
    */
    'ipAddressPoolSelectors'?: Array<IoMetallbV1beta1BGPAdvertisementSpecIpAddressPoolSelectorsInner>;
    /**
    * The list of IPAddressPools to advertise via this advertisement, selected by name.
    */
    'ipAddressPools'?: Array<string>;
    /**
    * The BGP LOCAL_PREF attribute which is used by BGP best path algorithm, Path with higher localpref is preferred over one with lower localpref.
    */
    'localPref'?: number;
    /**
    * NodeSelectors allows to limit the nodes to announce as next hops for the LoadBalancer IP. When empty, all the nodes having  are announced as next hops.
    */
    'nodeSelectors'?: Array<IoMetallbV1beta1BGPAdvertisementSpecIpAddressPoolSelectorsInner>;
    /**
    * Peers limits the bgppeer to advertise the ips of the selected pools to. When empty, the loadbalancer IP is announced to all the BGPPeers configured.
    */
    'peers'?: Array<string>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "aggregationLength",
            "baseName": "aggregationLength",
            "type": "number"
        },
        {
            "name": "aggregationLengthV6",
            "baseName": "aggregationLengthV6",
            "type": "number"
        },
        {
            "name": "communities",
            "baseName": "communities",
            "type": "Array<string>"
        },
        {
            "name": "ipAddressPoolSelectors",
            "baseName": "ipAddressPoolSelectors",
            "type": "Array<IoMetallbV1beta1BGPAdvertisementSpecIpAddressPoolSelectorsInner>"
        },
        {
            "name": "ipAddressPools",
            "baseName": "ipAddressPools",
            "type": "Array<string>"
        },
        {
            "name": "localPref",
            "baseName": "localPref",
            "type": "number"
        },
        {
            "name": "nodeSelectors",
            "baseName": "nodeSelectors",
            "type": "Array<IoMetallbV1beta1BGPAdvertisementSpecIpAddressPoolSelectorsInner>"
        },
        {
            "name": "peers",
            "baseName": "peers",
            "type": "Array<string>"
        }    ];

    static getAttributeTypeMap() {
        return IoMetallbV1beta1BGPAdvertisementSpec.attributeTypeMap;
    }
}


/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.23.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IoCertManagerAcmeV1ChallengeSpecSolverHttp01GatewayHTTPRoute } from './ioCertManagerAcmeV1ChallengeSpecSolverHttp01GatewayHTTPRoute';
import { IoCertManagerAcmeV1ChallengeSpecSolverHttp01Ingress } from './ioCertManagerAcmeV1ChallengeSpecSolverHttp01Ingress';

/**
* Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
*/
export class IoCertManagerAcmeV1ChallengeSpecSolverHttp01 {
    'gatewayHTTPRoute'?: IoCertManagerAcmeV1ChallengeSpecSolverHttp01GatewayHTTPRoute;
    'ingress'?: IoCertManagerAcmeV1ChallengeSpecSolverHttp01Ingress;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "gatewayHTTPRoute",
            "baseName": "gatewayHTTPRoute",
            "type": "IoCertManagerAcmeV1ChallengeSpecSolverHttp01GatewayHTTPRoute"
        },
        {
            "name": "ingress",
            "baseName": "ingress",
            "type": "IoCertManagerAcmeV1ChallengeSpecSolverHttp01Ingress"
        }    ];

    static getAttributeTypeMap() {
        return IoCertManagerAcmeV1ChallengeSpecSolverHttp01.attributeTypeMap;
    }
}


/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.23.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IoCertManagerV1ClusterIssuerSpecVaultAuthKubernetesSecretRef } from './ioCertManagerV1ClusterIssuerSpecVaultAuthKubernetesSecretRef';

/**
* Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
*/
export class IoCertManagerV1ClusterIssuerSpecVaultAuthKubernetes {
    /**
    * The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value \"/v1/auth/kubernetes\" will be used.
    */
    'mountPath'?: string;
    /**
    * A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
    */
    'role': string;
    'secretRef': IoCertManagerV1ClusterIssuerSpecVaultAuthKubernetesSecretRef;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "mountPath",
            "baseName": "mountPath",
            "type": "string"
        },
        {
            "name": "role",
            "baseName": "role",
            "type": "string"
        },
        {
            "name": "secretRef",
            "baseName": "secretRef",
            "type": "IoCertManagerV1ClusterIssuerSpecVaultAuthKubernetesSecretRef"
        }    ];

    static getAttributeTypeMap() {
        return IoCertManagerV1ClusterIssuerSpecVaultAuthKubernetes.attributeTypeMap;
    }
}


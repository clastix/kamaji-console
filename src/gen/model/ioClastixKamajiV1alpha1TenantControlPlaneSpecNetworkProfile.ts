/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* NetworkProfile specifies how the network is
*/
export class IoClastixKamajiV1alpha1TenantControlPlaneSpecNetworkProfile {
    /**
    * Address where API server of will be exposed. In case of LoadBalancer Service, this can be empty in order to use the exposed IP provided by the cloud controller manager.
    */
    'address'?: string;
    /**
    * AllowAddressAsExternalIP will include tenantControlPlane.Spec.NetworkProfile.Address in the section of ExternalIPs of the Kubernetes Service (only ClusterIP or NodePort)
    */
    'allowAddressAsExternalIP'?: boolean;
    /**
    * CertSANs sets extra Subject Alternative Names (SANs) for the API Server signing certificate. Use this field to add additional hostnames when exposing the Tenant Control Plane with third solutions.
    */
    'certSANs'?: Array<string>;
    /**
    * The default domain name used for DNS resolution within the cluster.
    */
    'clusterDomain'?: string;
    /**
    * The DNS Service for internal resolution, it must match the Service CIDR. In case of an empty value, it is automatically computed according to the Service CIDR, e.g.: Service CIDR 10.96.0.0/16, the resulting DNS Service IP will be 10.96.0.10 for IPv4, for IPv6 from the CIDR 2001:db8:abcd::/64 the resulting DNS Service IP will be 2001:db8:abcd::10.
    */
    'dnsServiceIPs'?: Array<string>;
    /**
    * Specify the LoadBalancer class in case of multiple load balancer implementations. Field supported only for Tenant Control Plane instances exposed using a LoadBalancer Service.
    */
    'loadBalancerClass'?: string;
    /**
    * LoadBalancerSourceRanges restricts the IP ranges that can access the LoadBalancer type Service. This field defines a list of IP address ranges (in CIDR format) that are allowed to access the service. If left empty, the service will allow traffic from all IP ranges (0.0.0.0/0). This feature is useful for restricting access to API servers or services to specific networks for security purposes. Example: {\"192.168.1.0/24\", \"10.0.0.0/8\"}
    */
    'loadBalancerSourceRanges'?: Array<string>;
    /**
    * CIDR for Kubernetes Pods: if empty, defaulted to 10.244.0.0/16.
    */
    'podCidr'?: string;
    /**
    * Port where API server of will be exposed
    */
    'port'?: number;
    /**
    * CIDR for Kubernetes Services: if empty, defaulted to 10.96.0.0/16.
    */
    'serviceCidr'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "address",
            "baseName": "address",
            "type": "string"
        },
        {
            "name": "allowAddressAsExternalIP",
            "baseName": "allowAddressAsExternalIP",
            "type": "boolean"
        },
        {
            "name": "certSANs",
            "baseName": "certSANs",
            "type": "Array<string>"
        },
        {
            "name": "clusterDomain",
            "baseName": "clusterDomain",
            "type": "string"
        },
        {
            "name": "dnsServiceIPs",
            "baseName": "dnsServiceIPs",
            "type": "Array<string>"
        },
        {
            "name": "loadBalancerClass",
            "baseName": "loadBalancerClass",
            "type": "string"
        },
        {
            "name": "loadBalancerSourceRanges",
            "baseName": "loadBalancerSourceRanges",
            "type": "Array<string>"
        },
        {
            "name": "podCidr",
            "baseName": "podCidr",
            "type": "string"
        },
        {
            "name": "port",
            "baseName": "port",
            "type": "number"
        },
        {
            "name": "serviceCidr",
            "baseName": "serviceCidr",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return IoClastixKamajiV1alpha1TenantControlPlaneSpecNetworkProfile.attributeTypeMap;
    }
}


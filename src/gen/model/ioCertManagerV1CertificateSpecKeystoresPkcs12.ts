/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IoCertManagerV1CertificateSpecKeystoresPkcs12PasswordSecretRef } from './ioCertManagerV1CertificateSpecKeystoresPkcs12PasswordSecretRef';

/**
* PKCS12 configures options for storing a PKCS12 keystore in the `spec.secretName` Secret resource.
*/
export class IoCertManagerV1CertificateSpecKeystoresPkcs12 {
    /**
    * Create enables PKCS12 keystore creation for the Certificate. If true, a file named `keystore.p12` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will be updated immediately. If the issuer provided a CA certificate, a file named `truststore.p12` will also be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef` containing the issuing Certificate Authority
    */
    'create': boolean;
    'passwordSecretRef': IoCertManagerV1CertificateSpecKeystoresPkcs12PasswordSecretRef;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "create",
            "baseName": "create",
            "type": "boolean"
        },
        {
            "name": "passwordSecretRef",
            "baseName": "passwordSecretRef",
            "type": "IoCertManagerV1CertificateSpecKeystoresPkcs12PasswordSecretRef"
        }    ];

    static getAttributeTypeMap() {
        return IoCertManagerV1CertificateSpecKeystoresPkcs12.attributeTypeMap;
    }
}


/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IoCertManagerAcmeV1ChallengeSpecSolverHttp01IngressIngressTemplate } from './ioCertManagerAcmeV1ChallengeSpecSolverHttp01IngressIngressTemplate';
import { IoCertManagerAcmeV1ChallengeSpecSolverHttp01IngressPodTemplate } from './ioCertManagerAcmeV1ChallengeSpecSolverHttp01IngressPodTemplate';

/**
* The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for \'/.well-known/acme-challenge/XYZ\' to \'challenge solver\' pods that are provisioned by cert-manager for each Challenge to be completed.
*/
export class IoCertManagerAcmeV1ChallengeSpecSolverHttp01Ingress {
    /**
    * This field configures the annotation `kubernetes.io/ingress.class` when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of `class`, `name` or `ingressClassName` may be specified.
    */
    '_class'?: string;
    /**
    * This field configures the field `ingressClassName` on the created Ingress resources used to solve ACME challenges that use this challenge solver. This is the recommended way of configuring the ingress class. Only one of `class`, `name` or `ingressClassName` may be specified.
    */
    'ingressClassName'?: string;
    'ingressTemplate'?: IoCertManagerAcmeV1ChallengeSpecSolverHttp01IngressIngressTemplate;
    /**
    * The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources. Only one of `class`, `name` or `ingressClassName` may be specified.
    */
    'name'?: string;
    'podTemplate'?: IoCertManagerAcmeV1ChallengeSpecSolverHttp01IngressPodTemplate;
    /**
    * Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.
    */
    'serviceType'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "_class",
            "baseName": "class",
            "type": "string"
        },
        {
            "name": "ingressClassName",
            "baseName": "ingressClassName",
            "type": "string"
        },
        {
            "name": "ingressTemplate",
            "baseName": "ingressTemplate",
            "type": "IoCertManagerAcmeV1ChallengeSpecSolverHttp01IngressIngressTemplate"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "podTemplate",
            "baseName": "podTemplate",
            "type": "IoCertManagerAcmeV1ChallengeSpecSolverHttp01IngressPodTemplate"
        },
        {
            "name": "serviceType",
            "baseName": "serviceType",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return IoCertManagerAcmeV1ChallengeSpecSolverHttp01Ingress.attributeTypeMap;
    }
}


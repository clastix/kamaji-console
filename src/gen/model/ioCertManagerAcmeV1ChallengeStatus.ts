/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class IoCertManagerAcmeV1ChallengeStatus {
    /**
    * presented will be set to true if the challenge values for this challenge are currently \'presented\'. This *does not* imply the self check is passing. Only that the values have been \'submitted\' for the appropriate challenge mechanism (i.e. the DNS01 TXT record has been presented, or the HTTP01 configuration has been configured).
    */
    'presented'?: boolean;
    /**
    * Used to denote whether this challenge should be processed or not. This field will only be set to true by the \'scheduling\' component. It will only be set to false by the \'challenges\' controller, after the challenge has reached a final state or timed out. If this field is set to false, the challenge controller will not take any more action.
    */
    'processing'?: boolean;
    /**
    * Contains human readable information on why the Challenge is in the current state.
    */
    'reason'?: string;
    /**
    * Contains the current \'state\' of the challenge. If not set, the state of the challenge is unknown.
    */
    'state'?: IoCertManagerAcmeV1ChallengeStatus.StateEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "presented",
            "baseName": "presented",
            "type": "boolean"
        },
        {
            "name": "processing",
            "baseName": "processing",
            "type": "boolean"
        },
        {
            "name": "reason",
            "baseName": "reason",
            "type": "string"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "IoCertManagerAcmeV1ChallengeStatus.StateEnum"
        }    ];

    static getAttributeTypeMap() {
        return IoCertManagerAcmeV1ChallengeStatus.attributeTypeMap;
    }
}

export namespace IoCertManagerAcmeV1ChallengeStatus {
    export enum StateEnum {
        Valid = <any> 'valid',
        Ready = <any> 'ready',
        Pending = <any> 'pending',
        Processing = <any> 'processing',
        Invalid = <any> 'invalid',
        Expired = <any> 'expired',
        Errored = <any> 'errored'
    }
}

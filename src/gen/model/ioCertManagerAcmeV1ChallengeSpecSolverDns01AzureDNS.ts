/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.23.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IoCertManagerAcmeV1ChallengeSpecSolverDns01AzureDNSClientSecretSecretRef } from './ioCertManagerAcmeV1ChallengeSpecSolverDns01AzureDNSClientSecretSecretRef';
import { IoCertManagerAcmeV1ChallengeSpecSolverDns01AzureDNSManagedIdentity } from './ioCertManagerAcmeV1ChallengeSpecSolverDns01AzureDNSManagedIdentity';

/**
* Use the Microsoft Azure DNS API to manage DNS01 challenge records.
*/
export class IoCertManagerAcmeV1ChallengeSpecSolverDns01AzureDNS {
    /**
    * if both this and ClientSecret are left unset MSI will be used
    */
    'clientID'?: string;
    'clientSecretSecretRef'?: IoCertManagerAcmeV1ChallengeSpecSolverDns01AzureDNSClientSecretSecretRef;
    /**
    * name of the Azure environment (default AzurePublicCloud)
    */
    'environment'?: IoCertManagerAcmeV1ChallengeSpecSolverDns01AzureDNS.EnvironmentEnum;
    /**
    * name of the DNS zone that should be used
    */
    'hostedZoneName'?: string;
    'managedIdentity'?: IoCertManagerAcmeV1ChallengeSpecSolverDns01AzureDNSManagedIdentity;
    /**
    * resource group the DNS zone is located in
    */
    'resourceGroupName': string;
    /**
    * ID of the Azure subscription
    */
    'subscriptionID': string;
    /**
    * when specifying ClientID and ClientSecret then this field is also needed
    */
    'tenantID'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "clientID",
            "baseName": "clientID",
            "type": "string"
        },
        {
            "name": "clientSecretSecretRef",
            "baseName": "clientSecretSecretRef",
            "type": "IoCertManagerAcmeV1ChallengeSpecSolverDns01AzureDNSClientSecretSecretRef"
        },
        {
            "name": "environment",
            "baseName": "environment",
            "type": "IoCertManagerAcmeV1ChallengeSpecSolverDns01AzureDNS.EnvironmentEnum"
        },
        {
            "name": "hostedZoneName",
            "baseName": "hostedZoneName",
            "type": "string"
        },
        {
            "name": "managedIdentity",
            "baseName": "managedIdentity",
            "type": "IoCertManagerAcmeV1ChallengeSpecSolverDns01AzureDNSManagedIdentity"
        },
        {
            "name": "resourceGroupName",
            "baseName": "resourceGroupName",
            "type": "string"
        },
        {
            "name": "subscriptionID",
            "baseName": "subscriptionID",
            "type": "string"
        },
        {
            "name": "tenantID",
            "baseName": "tenantID",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return IoCertManagerAcmeV1ChallengeSpecSolverDns01AzureDNS.attributeTypeMap;
    }
}

export namespace IoCertManagerAcmeV1ChallengeSpecSolverDns01AzureDNS {
    export enum EnvironmentEnum {
        AzurePublicCloud = <any> 'AzurePublicCloud',
        AzureChinaCloud = <any> 'AzureChinaCloud',
        AzureGermanCloud = <any> 'AzureGermanCloud',
        AzureUsGovernmentCloud = <any> 'AzureUSGovernmentCloud'
    }
}

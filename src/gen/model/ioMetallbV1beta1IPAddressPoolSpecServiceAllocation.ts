/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IoMetallbV1beta1BGPAdvertisementSpecIpAddressPoolSelectorsInner } from './ioMetallbV1beta1BGPAdvertisementSpecIpAddressPoolSelectorsInner';

/**
* AllocateTo makes ip pool allocation to specific namespace and/or service. The controller will use the pool with lowest value of priority in case of multiple matches. A pool with no priority set will be used only if the pools with priority can\'t be used. If multiple matching IPAddressPools are available it will check for the availability of IPs sorting the matching IPAddressPools by priority, starting from the highest to the lowest. If multiple IPAddressPools have the same priority, choice will be random.
*/
export class IoMetallbV1beta1IPAddressPoolSpecServiceAllocation {
    /**
    * NamespaceSelectors list of label selectors to select namespace(s) for ip pool, an alternative to using namespace list.
    */
    'namespaceSelectors'?: Array<IoMetallbV1beta1BGPAdvertisementSpecIpAddressPoolSelectorsInner>;
    /**
    * Namespaces list of namespace(s) on which ip pool can be attached.
    */
    'namespaces'?: Array<string>;
    /**
    * Priority priority given for ip pool while ip allocation on a service.
    */
    'priority'?: number;
    /**
    * ServiceSelectors list of label selector to select service(s) for which ip pool can be used for ip allocation.
    */
    'serviceSelectors'?: Array<IoMetallbV1beta1BGPAdvertisementSpecIpAddressPoolSelectorsInner>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "namespaceSelectors",
            "baseName": "namespaceSelectors",
            "type": "Array<IoMetallbV1beta1BGPAdvertisementSpecIpAddressPoolSelectorsInner>"
        },
        {
            "name": "namespaces",
            "baseName": "namespaces",
            "type": "Array<string>"
        },
        {
            "name": "priority",
            "baseName": "priority",
            "type": "number"
        },
        {
            "name": "serviceSelectors",
            "baseName": "serviceSelectors",
            "type": "Array<IoMetallbV1beta1BGPAdvertisementSpecIpAddressPoolSelectorsInner>"
        }    ];

    static getAttributeTypeMap() {
        return IoMetallbV1beta1IPAddressPoolSpecServiceAllocation.attributeTypeMap;
    }
}


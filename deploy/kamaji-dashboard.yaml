apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kamaji-dashboard
rules:
- apiGroups:
  - '*'
  resources:
  - namespaces
  - deployments
  - replicasets
  - services
  - pods
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kamaji.clastix.io
  resources:
  - tenantcontrolplanes
  - datastores
  verbs:
  - '*'
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kamaji-dashboard
  namespace: kamaji-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kamaji-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kamaji-dashboard
subjects:
- namespace: kamaji-system 
  kind: ServiceAccount
  name: kamaji-dashboard
---
apiVersion: v1
kind: Secret
metadata:
  name: kamaji-dashboard
  namespace: kamaji-system
data:
  # URL where the dashboard is accessible, eg. https://kamaji.labs.clastix.io/
  NEXTAUTH_URL: #############################################
  # Secret used to sign the browser session
  NEXTAUTH_SECRET: #########
  # Credentials to access the dashboard
  ADMIN_EMAIL: ##################
  ADMIN_PASSWORD: #########
  # Credentials to access AWS account
  AWS_ACCESS_KEY_ID: ##################
  AWS_SECRET_ACCESS_KEY: ###########################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kamaji-dashboard
  namespace: kamaji-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kamaji-dashboard
  template:
    metadata:
      labels:
        app: kamaji-dashboard
    spec:
      serviceAccountName: kamaji-dashboard
      containers:
      - image: clastix/kamaji-dashboard:latest
        imagePullPolicy: IfNotPresent
        name: dashboard
        ports:
          - containerPort: 3000
        envFrom:
          - secretRef:
              name: kamaji-dashboard
        resources:
      # create a secret containing token to pull the image from Docker Hub 
      # kubectl -n kamaji-system create secret generic regcred \
      # --from-file=.dockerconfigjson=<path/to/.docker/config.json> \
      # --type=kubernetes.io/dockerconfigjson
      imagePullSecrets:
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: kamaji-dashboard
  namespace: kamaji-system
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    app: kamaji-dashboard
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kamaji-dashboard
  namespace: kamaji-system
spec:
  ingressClassName: nginx
  rules:
  - host: kamaji.labs.clastix.io
    http:
      paths:
      - path: /ui
        pathType: Prefix
        backend:
          service:
            name: kamaji-dashboard
            port:
              number: 3000


